security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api/facture
      stateless: true
      jwt: ~

    # Développement: désactiver la sécurité pour les assets de dev (profiler, WDT, etc.)
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    # Firewall principal
    main:
      lazy: true
      stateless: true # Important pour API, aucune session
      provider: app_user_provider

      logout:
        path: /api/logout
        invalidate_session: true

  # Contrôle d'accès pour différentes routes de l'API
  access_control:
    - { path: ^/api/register, roles: PUBLIC_ACCESS } # Route inscription
    - { path: ^/api/login, roles: PUBLIC_ACCESS } # Route connexion
    - { path: ^/api/logout, roles: IS_AUTHENTICATED_FULLY } # Route déconnexion
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY } # Toutes les autres routes API

when@test:
  security:
    password_hashers:
      # Réduire les coûts pour les tests (éviter les calculs lourds)
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Valeur la plus basse pour bcrypt
        time_cost: 3 # Valeur la plus basse pour argon
        memory_cost: 10 # Valeur la plus basse pour argon
